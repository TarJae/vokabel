% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/state-machine.R
\name{quiz_get_state}
\alias{quiz_get_state}
\alias{quiz_set_state}
\alias{quiz_is_answer_correct}
\alias{quiz_is_current_correct}
\alias{quiz_check_is_each_correct}
\alias{quiz_is_all_correct}
\alias{quiz_in_sandbox_mode}
\alias{quiz_format_question_text}
\alias{quiz_ui_quiz_complete}
\alias{quiz_ui_quiz_complete_report}
\alias{quiz_ui_question}
\title{Functions for managing the states of the quiz}
\usage{
quiz_get_state(store, variable = NULL, state = NULL)

quiz_set_state(store, variable, value, state = NULL)

quiz_is_answer_correct(answer, key)

quiz_is_current_correct(store)

quiz_check_is_each_correct(store)

quiz_is_all_correct(store)

quiz_in_sandbox_mode(store)

quiz_format_question_text(question, i)

quiz_ui_quiz_complete(
  store,
  ns,
  message_correct,
  message_wrong,
  message_skipped
)

quiz_ui_quiz_complete_report(store)

quiz_ui_question(store, ns)
}
\arguments{
\item{store}{a list formatted like in the example}

\item{variable}{one of c('current-question', 'current-correct-answer', 'next-state', 'current-response')}

\item{state}{one of c('quiz-question-1', ..., 'quiz-question')}
}
\value{
depends on function
}
\description{
The quiz has states for each question and a final state for once the quiz ends. Only one state can be active at a time and the question text and answers shown depend on what state is active.

These are \code{get} and \code{set} functions for retrieving state values and setting values. The states are originally created via a \code{reactiveValues} call within Shiny server (or \code{list} outside of Shiny; see example below).

See the post-treatment learning module for a working example.
}
\section{Functions}{
\itemize{
\item \code{quiz_get_state()}: a getter function for the state machine

\item \code{quiz_set_state()}: a setter function for the state machine

\item \code{quiz_is_answer_correct()}: Backup function to check that an answer matches a response, agnostic of ordering

\item \code{quiz_is_current_correct()}: check that current-response is correct

\item \code{quiz_check_is_each_correct()}: check that recorded answers are correct and return a boolean vector

\item \code{quiz_is_all_correct()}: check that all recorded answers are correct

\item \code{quiz_in_sandbox_mode()}: Check if the quiz in sandbox mode

\item \code{quiz_format_question_text()}: Add a header denoting the question number

\item \code{quiz_ui_quiz_complete()}: UI to show once the quiz is completed

\item \code{quiz_ui_quiz_complete_report()}: Quiz score and table of correct answers to show at the end

\item \code{quiz_ui_question()}: UI to show for each question

}}
\examples{
\dontrun{
question_1 <- "This is question 1"
question_2 <- "This is question 2"
question_texts <- list(question_1, question_2)
question_prompts <- list(radioButtons(...), radioButtons(...))
correct_answers <- list(c('1a'), c('2b'))
# use shiny::reactiveValues() in lieu of list()
store <- list(
  state = 'quiz-question-1',
  states = c(paste0('quiz-question-', seq_along(question_texts)), 'quiz-complete'),
  question_texts = question_texts,
  question_prompts = question_prompts,
  correct_answers = correct_answers,
  responses = c('yes', NA, NA),
  skipped = FALSE,
  sandbox_mode = FALSE
)
quiz_get_state(store, 'current-question')
}
}
\author{
Joseph Marlo
}
